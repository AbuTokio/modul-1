/* ! Bitte immer am Anfang alles bzw. alle Elemente auf 0 setzen im Bezug auf margin und padding */
/* ? Global Styling */

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  /* Unser root Verzeichnis */
  font-size: 16px;
  /* font-size: 62.5%; */ /* - ergibt 10px */
  font-family: Arial, Helvetica, sans-serif;
}

/* :root ist wie ein Lagerhaus und man kann einfach bestimmte Eigenschaften da auslagern, um immer wieder zu benutzen */
:root {
  --header-h2-color: #ff1155;
  --width: 400px;
  --bg-color-yellow: rgb(253, 152, 0);
  --p-color: rgb(209, 109, 126);
}

/* ! Schriften einbinden */
/* ! Keyword => @font-face */

@font-face {
  font-family: "Caveat-Variable";
  src: url("../fonts/Caveat-VariableFont_wght.ttf");
}

@font-face {
  font-family: "Tiny-Pizza";
  src: url("../fonts/Tiny5-Regular.ttf");
}

/* ? Element Styling */

header {
  /* % Das ist korrekt, aber es gibt dafür noch ein Shortcut */
  /* margin-top: 50px;
  margin-bottom: 50px; */
  margin: 50px auto;
}

/* ! Schrift anwenden */

header h1 {
  font-family: "Caveat-Variable", sans-serif;
  font-size: 70px;
  text-decoration: underline;
  /* text-align wird verwendet, um die horizontale Ausrichtung von text in einem Element zu steuern */
  text-align: center;
  color: tomato;
  margin-bottom: 50px;
}

header p {
  border: 2px solid yellow;
  font-family: "Tiny-Pizza", sans-serif;
  /* Wie verwende ich diese ausgelagerte Farbe bzw. die Variable von :root? Indem man die Methode var() benutzt */
  color: var(--p-color);
  font-weight: 900;
  text-align: right;
  /* letter-spacing: 10px; */
  word-spacing: 10px;
  /* default ist nach jedem Wort, nach dieser Änderung (break-all) bricht es nach jedem Buchstaben um */
  word-break: break-all;
}

main {
  background-color: hotpink;
}

main article {
  padding: 40px 60px;
  margin: 20px auto;
  border: 3px solid green;
  width: 700px;
  background-color: yellow;
}

main article h2 {
  color: blue;
  border: 1px dashed blue;
  text-align: center;
  display: inline;
}

.box {
  width: var(--width);
  height: 100px;
  background-color: var(--bg-color-yellow);
}

/* ! ****** RELATIVE EINHEITEN ****** */

/* ! "%" Prozent bezieht sich immer auf den Eltern-Container, es bezieht sich also auf die Größe des Elements selbst */

.relative-container-percent {
  border: 2px solid green;
  width: 500px;
}

.container {
  width: 70%;
}

img {
  width: 100%;
  display: block;
}

/* $ "VH und VW" VIEWPORT EINHEITEN */
/* VH und VW sind zwei Frechdachse und hängen nicht vom Elternelement, sondern von dem Bereich des Browserfensters ab, also Viewpoint */

.box1 {
  border: 2px solid white;
  text-align: center;
  padding: 50px;
  color: white;
  /* width: 100vw; */
  height: 20vh;
}

.box2 {
  text-align: center;
  padding: 100px;
  color: white;
  width: 50vw;
  height: 50vh;
  background-color: limegreen;
}

/* $ "EM und REM" EINHEITEN */

/* ? EM bezieht sich immer auf die Schriftgröße des direkt übergeordneten Elements */

.em-font-size {
  /* Elternelement */
  font-size: 16px;
}

.larger {
  font-size: 1.5em; /* ? 1.5em wird im Hintergrund ungefähr als 24px gerechnet */
}

/* ? REM bezieht sich immer auf den root, oder besser gesagt html */

.even-larger {
  font-size: 2rem; /* ? 2rem wird im Hintergrund als 32px gerechnet */
}

/* $ CLAMP */
.content {
  margin: 5rem auto;
  width: 500px;
  background-color: yellow;
}

span {
  color: rgb(162, 12, 162);
  font-weight: 900;
}

.text {
  color: rgb(49, 184, 121);
  /* diese Methode kriegt von uns 3 Parameter, undzwar (min, standard, max) als Werte */
  font-size: clamp(2rem, 5vw, 5rem);
}
